{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/forms\";\nexport class PocetnaStranaComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.email = '';\n    this.password = '';\n  } // Inject HttpClient servis\n  onLogin(token) {\n    // Ovde dobijate autentifikacioni token od servera\n    this.authService.login(token);\n  }\n  onLogout() {\n    this.authService.logout();\n  }\n  onSubmit() {\n    const userData = {\n      email: this.email,\n      password: this.password\n    };\n    this.http.post('/api/login', userData).subscribe(response => {\n      // Ovde se možete rukovati odgovorom sa servera\n      // Na primer, čuvati token ili sesiju na frontendu i preusmeriti korisnika\n      if (response && response.token) {\n        // Ako je autentifikacija uspešna, sačuvajte token koristeći AuthService\n        this.authService.login(response.token);\n        // Ovde možete dodati logiku za preusmeravanje korisnika na određenu stranicu\n        //  if (korisnikJeProfesor) {\n        //   this.router.navigate(['/profesor']);\n        // } else {\n        //   this.router.navigate(['/student']);\n        // }\n      }\n    });\n  }\n}\n_class = PocetnaStranaComponent;\n_class.ɵfac = function PocetnaStranaComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-pocetna-strana\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function PocetnaStranaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PocetnaStranaComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Log In\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["PocetnaStranaComponent","constructor","http","authService","email","password","onLogin","token","login","onLogout","logout","onSubmit","userData","post","subscribe","response","i0","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","selectors","decls","vars","consts","template","PocetnaStranaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PocetnaStranaComponent_Template_form_ngSubmit_3_listener","PocetnaStranaComponent_Template_input_ngModelChange_7_listener","$event","PocetnaStranaComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.ts","C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-pocetna-strana',\n  templateUrl: './pocetna-strana.component.html',\n  styleUrls: ['./pocetna-strana.component.css']\n})\nexport class PocetnaStranaComponent {\n\n  email: string = '';\n  \n  password: string = '';\n  \n\n  constructor(private http: HttpClient, private authService: AuthService) {} // Inject HttpClient servis\n\n\n  onLogin(token: string): void {\n    // Ovde dobijate autentifikacioni token od servera\n    this.authService.login(token);\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n  }\n\n  onSubmit() {\n    const userData = {\n      email: this.email,\n      password: this.password,\n    };\n\n    this.http.post('/api/login', userData).subscribe(\n      (response: any) => {\n        // Ovde se možete rukovati odgovorom sa servera\n        // Na primer, čuvati token ili sesiju na frontendu i preusmeriti korisnika\n        if (response && response.token) {\n          // Ako je autentifikacija uspešna, sačuvajte token koristeći AuthService\n          this.authService.login(response.token);\n          // Ovde možete dodati logiku za preusmeravanje korisnika na određenu stranicu\n          //  if (korisnikJeProfesor) {\n          //   this.router.navigate(['/profesor']);\n          // } else {\n          //   this.router.navigate(['/student']);\n          // }\n        }\n      }\n    );\n  }\n}\n","<div class=\"login-container\">\n    <h2>Log In</h2>\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n        </div>\n        <button type=\"submit\">Log In</button>\n    </form>\n</div>\n\n\n<!-- <button routerLink=\"/student\">Idi na Student Stranu</button>\n<button routerLink=\"/profesor\">Idi na Profesor Stranu</button> -->"],"mappings":";;;;;AASA,OAAM,MAAOA,sBAAsB;EAOjCC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IALzD,KAAAC,KAAK,GAAW,EAAE;IAElB,KAAAC,QAAQ,GAAW,EAAE;EAGoD,CAAC,CAAC;EAG3EC,OAAOA,CAACC,KAAa;IACnB;IACA,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACD,KAAK,CAAC;EAC/B;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE;EAC3B;EAEAC,QAAQA,CAAA;IACN,MAAMC,QAAQ,GAAG;MACfR,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACH,IAAI,CAACW,IAAI,CAAC,YAAY,EAAED,QAAQ,CAAC,CAACE,SAAS,CAC7CC,QAAa,IAAI;MAChB;MACA;MACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACR,KAAK,EAAE;QAC9B;QACA,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACO,QAAQ,CAACR,KAAK,CAAC;QACtC;QACA;QACA;QACA;QACA;QACA;;IAEJ,CAAC,CACF;EACH;;SAzCWP,sBAAsB;;mBAAtBA,MAAsB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;QAAtBrB,MAAsB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTnCZ,EAAA,CAAAc,cAAA,aAA6B;MACrBd,EAAA,CAAAe,MAAA,aAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACfhB,EAAA,CAAAc,cAAA,cAA8B;MAAxBd,EAAA,CAAAiB,UAAA,sBAAAC,yDAAA;QAAA,OAAYL,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MACzBK,EAAA,CAAAc,cAAA,aAAwB;MACDd,EAAA,CAAAe,MAAA,aAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACjChB,EAAA,CAAAc,cAAA,eAAyE;MAA7Bd,EAAA,CAAAiB,UAAA,2BAAAE,+DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAzB,KAAA,GAAAgC,MAAA;MAAA,EAAmB;MAA/DpB,EAAA,CAAAgB,YAAA,EAAyE;MAE7EhB,EAAA,CAAAc,cAAA,aAAwB;MACEd,EAAA,CAAAe,MAAA,iBAAS;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACvChB,EAAA,CAAAc,cAAA,gBAAqF;MAAhCd,EAAA,CAAAiB,UAAA,2BAAAI,gEAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAxB,QAAA,GAAA+B,MAAA;MAAA,EAAsB;MAA3EpB,EAAA,CAAAgB,YAAA,EAAqF;MAEzFhB,EAAA,CAAAc,cAAA,iBAAsB;MAAAd,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MANWhB,EAAA,CAAAsB,SAAA,GAAmB;MAAnBtB,EAAA,CAAAuB,UAAA,YAAAV,GAAA,CAAAzB,KAAA,CAAmB;MAIVY,EAAA,CAAAsB,SAAA,GAAsB;MAAtBtB,EAAA,CAAAuB,UAAA,YAAAV,GAAA,CAAAxB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}