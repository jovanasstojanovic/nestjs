{"ast":null,"code":"var _class;\nimport { environment } from 'src/app/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrisustvoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getPrisustvaWithStudentInfoByPredmetId(predmetId) {\n    return this.httpClient.get(environment.api + `/prisustvo/predmet/${predmetId}`);\n  }\n  getAll() {\n    return this.httpClient.get(environment.api + '/student');\n  }\n  pronadjiPrisustvo(studentId, predmetId) {\n    const url = environment.api + `/prisustvo/student/${studentId}/predmet/${predmetId}`;\n    return this.httpClient.get(url);\n  }\n  increaseCasCount(prisustvoId) {\n    const url = environment.api + `/prisustvo/increase-cas-count/${prisustvoId}`;\n    return this.httpClient.put(url, {});\n  }\n  posecenostNaCasovima(predmetId) {\n    const casoviSaBrojem = this.httpClient.get(environment.api + `/prisustvo-po-casu/predmet/${predmetId}/casovi/count`);\n    const sviCasovi = this.httpClient.get(environment.api + `/cas/poPredmetu/${predmetId}`);\n    const azuriraniCasovi = [...sviCasovi];\n    casoviSaBrojem.forEach(({\n      cas_id,\n      casCount\n    }) => {\n      const indeks = azuriraniCasovi.findIndex(cas => cas.cas_id === cas_id);\n      if (indeks !== -1) {\n        azuriraniCasovi[indeks].casCount = casCount;\n      }\n    });\n    return azuriraniCasovi;\n  }\n}\n_class = PrisustvoService;\n_class.ɵfac = function PrisustvoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","PrisustvoService","constructor","httpClient","getPrisustvaWithStudentInfoByPredmetId","predmetId","get","api","getAll","pronadjiPrisustvo","studentId","url","increaseCasCount","prisustvoId","put","posecenostNaCasovima","casoviSaBrojem","sviCasovi","azuriraniCasovi","forEach","cas_id","casCount","indeks","findIndex","cas","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\services\\prisustvo\\prisustvo.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/app/environments/environment';\nimport { Prisustvo } from 'src/app/models/prisustvo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrisustvoService {\n constructor(private httpClient:HttpClient) { }\n \n  getPrisustvaWithStudentInfoByPredmetId(predmetId: number){\n    return this.httpClient.get<any[]>(environment.api+`/prisustvo/predmet/${predmetId}`);\n  }\n\n  getAll(){\n    return this.httpClient.get<Prisustvo[]>(environment.api+'/student');\n  }\n\n  pronadjiPrisustvo(studentId: number, predmetId: number): Observable<any> {\n    const url = environment.api+`/prisustvo/student/${studentId}/predmet/${predmetId}`;\n    return this.httpClient.get(url);\n  }\n\n\n  increaseCasCount(prisustvoId: number): Observable<any> {\n    const url = environment.api+`/prisustvo/increase-cas-count/${prisustvoId}`;\n    return this.httpClient.put(url, {});\n  }\n\n  posecenostNaCasovima(predmetId:number):Observable<any[]>{\n    const casoviSaBrojem=this.httpClient.get<any[]>(environment.api+`/prisustvo-po-casu/predmet/${predmetId}/casovi/count`);\n    const sviCasovi=this.httpClient.get<any[]>(environment.api+`/cas/poPredmetu/${predmetId}`);\n    const azuriraniCasovi = [...sviCasovi];\n\n    casoviSaBrojem.forEach(({ cas_id, casCount }) => {\n      const indeks = azuriraniCasovi.findIndex((cas) => cas.cas_id === cas_id);\n      if (indeks !== -1) {\n        azuriraniCasovi[indeks].casCount = casCount;\n      }\n    });\n    return azuriraniCasovi;\n  }\n\n  \n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,kCAAkC;;;AAM9D,OAAM,MAAOC,gBAAgB;EAC5BC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE5CC,sCAAsCA,CAACC,SAAiB;IACtD,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAC,sBAAsBF,SAAS,EAAE,CAAC;EACtF;EAEAG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAcN,WAAW,CAACO,GAAG,GAAC,UAAU,CAAC;EACrE;EAEAE,iBAAiBA,CAACC,SAAiB,EAAEL,SAAiB;IACpD,MAAMM,GAAG,GAAGX,WAAW,CAACO,GAAG,GAAC,sBAAsBG,SAAS,YAAYL,SAAS,EAAE;IAClF,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAACK,GAAG,CAAC;EACjC;EAGAC,gBAAgBA,CAACC,WAAmB;IAClC,MAAMF,GAAG,GAAGX,WAAW,CAACO,GAAG,GAAC,iCAAiCM,WAAW,EAAE;IAC1E,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAACH,GAAG,EAAE,EAAE,CAAC;EACrC;EAEAI,oBAAoBA,CAACV,SAAgB;IACnC,MAAMW,cAAc,GAAC,IAAI,CAACb,UAAU,CAACG,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAC,8BAA8BF,SAAS,eAAe,CAAC;IACvH,MAAMY,SAAS,GAAC,IAAI,CAACd,UAAU,CAACG,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAC,mBAAmBF,SAAS,EAAE,CAAC;IAC1F,MAAMa,eAAe,GAAG,CAAC,GAAGD,SAAS,CAAC;IAEtCD,cAAc,CAACG,OAAO,CAAC,CAAC;MAAEC,MAAM;MAAEC;IAAQ,CAAE,KAAI;MAC9C,MAAMC,MAAM,GAAGJ,eAAe,CAACK,SAAS,CAAEC,GAAG,IAAKA,GAAG,CAACJ,MAAM,KAAKA,MAAM,CAAC;MACxE,IAAIE,MAAM,KAAK,CAAC,CAAC,EAAE;QACjBJ,eAAe,CAACI,MAAM,CAAC,CAACD,QAAQ,GAAGA,QAAQ;;IAE/C,CAAC,CAAC;IACF,OAAOH,eAAe;EACxB;;SAlCWjB,gBAAgB;;mBAAhBA,MAAgB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB3B,MAAgB;EAAA4B,OAAA,EAAhB5B,MAAgB,CAAA6B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}