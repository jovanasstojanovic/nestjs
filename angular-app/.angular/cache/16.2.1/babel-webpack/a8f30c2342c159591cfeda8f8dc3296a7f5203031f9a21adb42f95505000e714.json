{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/forms\";\nexport class PocetnaStranaComponent {\n  constructor(http, authService, router) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.userType = 'student'; // Default value\n  } // Inject HttpClient servis\n  submit() {\n    // Ovde možete da rukujete podacima koji su uneti/izabrani u formi\n    console.log('Email:', this.email);\n    console.log('Password:', this.password);\n    console.log('User Type:', this.userType);\n    // Provera userType i pozivanje odgovarajuće funkcije za prijavljivanje\n    if (this.userType === 'student') {\n      // Pozivanje funkcije za prijavljivanje kao student\n      this.authService.loginStudent(this.email, this.password).subscribe(response => {\n        // Uspesno prijavljivanje, možete dodatno rukovati ovde\n        console.log(response);\n        this.router.navigate(['/student']);\n      });\n    } else if (this.userType === 'profesor') {\n      // Pozivanje funkcije za prijavljivanje kao profesor\n      this.authService.loginProfesor(this.email, this.password).subscribe(response => {\n        // Uspesno prijavljivanje, možete dodatno rukovati ovde\n        console.log(response);\n        this.router.navigate(['/profesor']);\n      });\n    }\n  }\n}\n_class = PocetnaStranaComponent;\n_class.ɵfac = function PocetnaStranaComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-pocetna-strana\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"login-container\"], [\"matInput\", \"\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"user-type\"], [\"type\", \"radio\", \"value\", \"student\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"profesor\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function PocetnaStranaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\")(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.userType = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \" Student \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\")(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.userType = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" Profesor \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function PocetnaStranaComponent_Template_button_click_13_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.userType);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.userType);\n    }\n  },\n  dependencies: [i4.MatInput, i5.MatFormField, i6.MatButton, i7.DefaultValueAccessor, i7.RadioControlValueAccessor, i7.NgControlStatus, i7.NgModel],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100vh;\\n    \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wb2NldG5hLXN0cmFuYS9wb2NldG5hLXN0cmFuYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIC8qIFZpc2luYSBla3JhbmEgKi9cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["PocetnaStranaComponent","constructor","http","authService","router","email","password","userType","submit","console","log","loginStudent","subscribe","response","navigate","loginProfesor","i0","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","PocetnaStranaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PocetnaStranaComponent_Template_input_ngModelChange_2_listener","$event","ɵɵelementEnd","PocetnaStranaComponent_Template_input_ngModelChange_4_listener","PocetnaStranaComponent_Template_input_ngModelChange_7_listener","ɵɵtext","PocetnaStranaComponent_Template_input_ngModelChange_10_listener","ɵɵelement","PocetnaStranaComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.ts","C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-pocetna-strana',\n  templateUrl: './pocetna-strana.component.html',\n  styleUrls: ['./pocetna-strana.component.css']\n})\nexport class PocetnaStranaComponent {\n\n\n  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {} // Inject HttpClient servis\n\n\n  email: string = '';\n  password: string = '';\n  userType: string = 'student'; // Default value\n\n  submit() {\n  // Ovde možete da rukujete podacima koji su uneti/izabrani u formi\n  console.log('Email:', this.email);\n  console.log('Password:', this.password);\n  console.log('User Type:', this.userType);\n\n  // Provera userType i pozivanje odgovarajuće funkcije za prijavljivanje\n  if (this.userType === 'student') {\n    // Pozivanje funkcije za prijavljivanje kao student\n    this.authService.loginStudent(this.email, this.password).subscribe(\n      (response) => {\n        // Uspesno prijavljivanje, možete dodatno rukovati ovde\n        console.log(response);\n        this.router.navigate(['/student']);\n      }\n    );\n  } else if (this.userType === 'profesor') {\n    // Pozivanje funkcije za prijavljivanje kao profesor\n    this.authService.loginProfesor(this.email, this.password).subscribe(\n      (response) => {\n        // Uspesno prijavljivanje, možete dodatno rukovati ovde\n        console.log(response);\n        this.router.navigate(['/profesor']);\n      }\n    );\n  }\n}\n\n\n\n  // onLogin(token: string): void {\n  //   // Ovde dobijate autentifikacioni token od servera\n  //   this.authService.login(token);\n  // }\n\n  // onLogout(): void {\n  //   this.authService.logout();\n  // }\n\n  // onSubmit() {\n  //   const userData = {\n  //     email: this.email,\n  //     password: this.password,\n  //   };\n\n  //   this.http.post('/api/login', userData).subscribe(\n  //     (response: any) => {\n  //       // Ovde se možete rukovati odgovorom sa servera\n  //       // Na primer, čuvati token ili sesiju na frontendu i preusmeriti korisnika\n  //       if (response && response.token) {\n  //         // Ako je autentifikacija uspešna, sačuvajte token koristeći AuthService\n  //         this.authService.login(response.token);\n  //         // Ovde možete dodati logiku za preusmeravanje korisnika na određenu stranicu\n  //         //  if (korisnikJeProfesor) {\n  //         //   this.router.navigate(['/profesor']);\n  //         // } else {\n  //         //   this.router.navigate(['/student']);\n  //         // }\n  //       }\n  //     }\n  //   );\n  // }\n\n\n  \n}\n","<div class=\"login-container\">\n    <mat-form-field>\n        <input matInput placeholder=\"Email\" [(ngModel)]=\"email\">\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\">\n    </mat-form-field>\n    <div class=\"user-type\">\n        <label>\n            <input type=\"radio\" [(ngModel)]=\"userType\" value=\"student\">\n            Student\n        </label>\n        <label>\n            <input type=\"radio\" [(ngModel)]=\"userType\" value=\"profesor\">\n            Profesor\n        </label>\n    </div>\n    <br>\n    <button mat-raised-button color=\"primary\" (click)=\"submit()\">Submit</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}