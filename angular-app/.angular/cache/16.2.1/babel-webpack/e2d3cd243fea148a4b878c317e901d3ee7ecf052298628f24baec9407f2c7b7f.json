{"ast":null,"code":"var _class;\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/prisustvo/prisustvo.service\";\nconst _c0 = [\"lineChart\"];\nexport class ChartComponent {\n  constructor(prisustvoService) {\n    this.prisustvoService = prisustvoService;\n    this.podaci = [];\n  }\n  ngOnInit() {\n    this.getDataAndCreateChart();\n  }\n  getDataAndCreateChart() {\n    this.prisustvoService.posecenostNaCasovima(this.idPredmeta).subscribe(data => {\n      this.podaci = data.map(item => ({\n        cas_id: item.cas_id,\n        casCount: parseInt(item.casCount)\n      }));\n      this.createLineChart();\n    });\n  }\n  createLineChart() {\n    const data = {\n      labels: this.podaci.map(item => item.cas_id.toString()),\n      datasets: [{\n        label: 'Cas Count',\n        data: this.podaci.map(item => item.casCount),\n        borderColor: 'blue',\n        fill: false\n      }]\n    };\n    const options = {\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Cas ID' // Dodajte opcionalni naslov za x-osu\n          }\n        },\n\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    const ctx = this.chartRef.nativeElement.getContext('2d');\n    const lineChart = new Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: options\n    });\n    return lineChart;\n  }\n}\n_class = ChartComponent;\n_class.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.PrisustvoService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-chart\"]],\n  viewQuery: function ChartComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartRef = _t.first);\n    }\n  },\n  inputs: {\n    idPredmeta: \"idPredmeta\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"lineChart\", \"\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", null, 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Chart","ChartComponent","constructor","prisustvoService","podaci","ngOnInit","getDataAndCreateChart","posecenostNaCasovima","idPredmeta","subscribe","data","map","item","cas_id","casCount","parseInt","createLineChart","labels","toString","datasets","label","borderColor","fill","options","plugins","legend","display","scales","x","type","title","text","y","beginAtZero","ctx","chartRef","nativeElement","getContext","lineChart","i0","ɵɵdirectiveInject","i1","PrisustvoService","selectors","viewQuery","ChartComponent_Query","rf","ɵɵelement"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\profesor-strana\\chart\\chart.component.ts","C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\profesor-strana\\chart\\chart.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions } from 'chart.js';\nimport { PrisustvoService } from 'src/app/services/prisustvo/prisustvo.service';\n\ninterface CasData {\n  cas_id: number;\n  casCount: number;\n}\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n})\n\nexport class ChartComponent implements OnInit {\n\n  \n  @Input() idPredmeta!: number;\n  podaci:CasData[]=[];\n  constructor(private prisustvoService:PrisustvoService){}\n\n  @ViewChild('lineChart', { static: true }) private chartRef!: ElementRef;\n  ngOnInit(): void {\n   this.getDataAndCreateChart();\n  }\n\n  getDataAndCreateChart() {\n    this.prisustvoService.posecenostNaCasovima(this.idPredmeta).subscribe((data) => {\n      this.podaci = data.map((item) => ({\n        cas_id: item.cas_id,\n        casCount: parseInt(item.casCount)\n      }));\n\n      \n      this.createLineChart();\n    });\n  }\n\n  createLineChart() {\n\n    const data = {\n      labels: this.podaci.map((item) => item.cas_id.toString()), \n      datasets: [\n        {\n          label: 'Cas Count',\n          data: this.podaci.map((item) => item.casCount),\n          borderColor: 'blue',\n          fill: false\n        }\n      ]\n    };\n\n\n    \n\n    const options: ChartOptions<'line'>  = {\n  plugins: {\n    legend: {\n      display: false \n    }\n  },\n  scales: {\n    x: {\n      type: 'linear',\n      title: {\n        display: true,\n        text: 'Cas ID' // Dodajte opcionalni naslov za x-osu\n      }\n    },\n    y: {\n      beginAtZero: true\n    }\n  }\n};\n\n\n\n    const ctx = this.chartRef.nativeElement.getContext('2d');\n\n    const lineChart = new Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: options\n    });\n\n    return lineChart;\n  }\n\n}\n","<canvas #lineChart></canvas>"],"mappings":";AACA,SAASA,KAAK,QAAsB,UAAU;;;;AAc9C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,gBAAiC;IAAjC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IADpC,KAAAC,MAAM,GAAW,EAAE;EACoC;EAGvDC,QAAQA,CAAA;IACP,IAAI,CAACC,qBAAqB,EAAE;EAC7B;EAEAA,qBAAqBA,CAAA;IACnB,IAAI,CAACH,gBAAgB,CAACI,oBAAoB,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC7E,IAAI,CAACN,MAAM,GAAGM,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAChCC,MAAM,EAAED,IAAI,CAACC,MAAM;QACnBC,QAAQ,EAAEC,QAAQ,CAACH,IAAI,CAACE,QAAQ;OACjC,CAAC,CAAC;MAGH,IAAI,CAACE,eAAe,EAAE;IACxB,CAAC,CAAC;EACJ;EAEAA,eAAeA,CAAA;IAEb,MAAMN,IAAI,GAAG;MACXO,MAAM,EAAE,IAAI,CAACb,MAAM,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACK,QAAQ,EAAE,CAAC;MACzDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBV,IAAI,EAAE,IAAI,CAACN,MAAM,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,QAAQ,CAAC;QAC9CO,WAAW,EAAE,MAAM;QACnBC,IAAI,EAAE;OACP;KAEJ;IAKD,MAAMC,OAAO,GAA0B;MACzCC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;;OAEZ;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAE;YACLJ,OAAO,EAAE,IAAI;YACbK,IAAI,EAAE,QAAQ,CAAC;;SAElB;;QACDC,CAAC,EAAE;UACDC,WAAW,EAAE;;;KAGlB;IAIG,MAAMC,GAAG,GAAG,IAAI,CAACC,QAAQ,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IAExD,MAAMC,SAAS,GAAG,IAAItC,KAAK,CAACkC,GAAG,EAAE;MAC/BL,IAAI,EAAE,MAAM;MACZnB,IAAI,EAAEA,IAAI;MACVa,OAAO,EAAEA;KACV,CAAC;IAEF,OAAOe,SAAS;EAClB;;SAxEWrC,cAAc;;mBAAdA,MAAc,EAAAsC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;;QAAdzC,MAAc;EAAA0C,SAAA;EAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAZ,GAAA;IAAA,IAAAY,EAAA;;;;;;;;;;;;;;;;MCf3BP,EAAA,CAAAQ,SAAA,sBAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}