{"ast":null,"code":"var _class;\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/prisustvo/prisustvo.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"canvas\"];\nfunction ChartComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"canvas\", 2, 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.myChart);\n  }\n}\nChart.register(...registerables);\nexport class ChartComponent {\n  constructor(prisustvoService) {\n    this.prisustvoService = prisustvoService;\n    this.podaci = [];\n    this.myChart = [];\n  }\n  ngAfterViewInit() {\n    this.prisustvoService.posecenostNaCasovima(this.idPredmeta).subscribe(data => {\n      this.podaci = data.map(item => ({\n        cas_id: item.cas_id,\n        casCount: item.casCount\n      }));\n      let last10CasIds = [];\n      let last10CasCounts = [];\n      const numberOfItemsToTake = 10;\n      if (this.podaci.length >= numberOfItemsToTake) {\n        last10CasIds = this.podaci.slice(-numberOfItemsToTake).map(item => item.cas_id.toString());\n        last10CasCounts = this.podaci.slice(-numberOfItemsToTake).map(item => item.casCount);\n      } else {\n        last10CasIds = [...this.podaci.map(item => item.cas_id.toString()), ...Array(numberOfItemsToTake - this.podaci.length).fill('')];\n        last10CasCounts = [...this.podaci.map(item => item.casCount), ...Array(numberOfItemsToTake - this.podaci.length).fill(0)];\n      }\n      var myChart = new Chart(this.canvas.nativeElement.getContext('2d'), {\n        type: 'bar',\n        data: {\n          labels: last10CasIds,\n          datasets: [{\n            label: '# of Votes',\n            data: last10CasCounts,\n            backgroundColor:\n            //[\n            'rgba(255, 99, 132, 0.2)'\n            // ,\n            // 'rgba(54, 162, 235, 0.2)',\n            // 'rgba(255, 206, 86, 0.2)',\n            // 'rgba(75, 192, 192, 0.2)',\n            // 'rgba(153, 102, 255, 0.2)',\n            // 'rgba(255, 159, 64, 0.2)'\n            //]\n            ,\n\n            borderColor:\n            //[\n            'rgba(255, 99, 132, 1)'\n            // ,\n            // 'rgba(54, 162, 235, 1)',\n            // 'rgba(255, 206, 86, 1)',\n            // 'rgba(75, 192, 192, 1)',\n            // 'rgba(153, 102, 255, 1)',\n            // 'rgba(255, 159, 64, 1)'\n            // ]\n            ,\n\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    });\n  }\n}\n_class = ChartComponent;\n_class.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.PrisustvoService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-chart\"]],\n  viewQuery: function ChartComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  inputs: {\n    idPredmeta: \"idPredmeta\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"id\", \"divChart\", 4, \"ngIf\"], [\"id\", \"divChart\"], [\"id\", \"canvas\"], [\"canvas\", \"\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChartComponent_div_0_Template, 4, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.myChart);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"#divChart[_ngcontent-%COMP%]{\\n    display: block;\\n    width: 400px;\\n    height: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wcm9mZXNvci1zdHJhbmEvY2hhcnQvY2hhcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osYUFBYTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIiNkaXZDaGFydHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgaGVpZ2h0OiA0MDBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Chart","registerables","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","myChart","register","ChartComponent","constructor","prisustvoService","podaci","ngAfterViewInit","posecenostNaCasovima","idPredmeta","subscribe","data","map","item","cas_id","casCount","last10CasIds","last10CasCounts","numberOfItemsToTake","length","slice","toString","Array","fill","canvas","nativeElement","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","ɵɵdirectiveInject","i1","PrisustvoService","selectors","viewQuery","ChartComponent_Query","rf","ctx","ɵɵtemplate","ChartComponent_div_0_Template","ɵɵproperty"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\profesor-strana\\chart\\chart.component.ts","C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\profesor-strana\\chart\\chart.component.html"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions, registerables } from 'chart.js';\nimport { PrisustvoService } from 'src/app/services/prisustvo/prisustvo.service';\nChart.register(...registerables);\n\ninterface CasData {\n  cas_id: number;\n  casCount: number;\n}\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n})\n\nexport class ChartComponent implements AfterViewInit {\n\n  \n  @Input() idPredmeta!: number;\n  podaci:CasData[]=[];\n  constructor(private prisustvoService:PrisustvoService){}\n  myChart=[];\n\n  @ViewChild('canvas') canvas!: ElementRef;\n  ngAfterViewInit(): void {\n\n    \n    this.prisustvoService.posecenostNaCasovima(this.idPredmeta).subscribe((data) => {\n      this.podaci = data.map((item) => ({\n        cas_id: item.cas_id,\n        casCount: item.casCount\n      }));\n      \n      let last10CasIds: string[] = [];\n      let last10CasCounts: number[] = []\n      const numberOfItemsToTake = 10;\n\n      if (this.podaci.length >= numberOfItemsToTake) {\n        last10CasIds = this.podaci.slice(-numberOfItemsToTake).map((item) => item.cas_id.toString());\n        last10CasCounts = this.podaci.slice(-numberOfItemsToTake).map((item) => item.casCount);\n      } else {\n        last10CasIds = [...this.podaci.map((item) => item.cas_id.toString()), ...Array(numberOfItemsToTake - this.podaci.length).fill('')];\n        last10CasCounts = [\n          ...this.podaci.map((item) => item.casCount),\n          ...Array(numberOfItemsToTake - this.podaci.length).fill(0)\n        ];\n      }\n\n    \n\n      var myChart = new Chart(this.canvas.nativeElement.getContext('2d'), {\n        type: 'bar',\n        data: {\n            labels: last10CasIds,\n            datasets: [{\n                label: '# of Votes',\n                data: last10CasCounts,\n                backgroundColor: //[\n                    'rgba(255, 99, 132, 0.2)'\n                    // ,\n                    // 'rgba(54, 162, 235, 0.2)',\n                    // 'rgba(255, 206, 86, 0.2)',\n                    // 'rgba(75, 192, 192, 0.2)',\n                    // 'rgba(153, 102, 255, 0.2)',\n                    // 'rgba(255, 159, 64, 0.2)'\n                //]\n                ,\n                borderColor: //[\n                    'rgba(255, 99, 132, 1)'\n                    // ,\n                    // 'rgba(54, 162, 235, 1)',\n                    // 'rgba(255, 206, 86, 1)',\n                    // 'rgba(75, 192, 192, 1)',\n                    // 'rgba(153, 102, 255, 1)',\n                    // 'rgba(255, 159, 64, 1)'\n              // ]\n                ,\n                borderWidth: 1\n            }]\n          },\n          options: {\n              scales: {\n                  y: {\n                      beginAtZero: true\n                  }\n              }\n          }\n      });\n    });\n  }\n}\n","<div *ngIf=\"myChart\" id=\"divChart\">\r\n<canvas #canvas id=\"canvas\">{{ myChart }}</canvas>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}