{"ast":null,"code":"var _class;\nimport { environment } from 'src/app/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrisustvoPoCasuService {\n  constructor(http) {\n    this.http = http;\n  }\n  proveriPrisustvoPoCasu(casId, prisustvoId) {\n    const url = environment.api + `/prisustvo-po-casu/cas/${casId}/prisustvo/${prisustvoId}`;\n    return this.http.get(url);\n  }\n  createPrisustvoPoCasu(casId, prisustvoId) {\n    const body = {\n      cas: casId,\n      prisustvo: prisustvoId\n    };\n    return this.http.post(environment.api + `/prisustvo-po-casu`, body);\n  }\n  countPrisustvoPoCasuByCasAndPredmet(predmetId) {\n    return this.http.get(environment.api + `/prisustvo-po-casu/predmet/${predmetId}/casovi/count`);\n  }\n}\n_class = PrisustvoPoCasuService;\n_class.ɵfac = function PrisustvoPoCasuService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","PrisustvoPoCasuService","constructor","http","proveriPrisustvoPoCasu","casId","prisustvoId","url","api","get","createPrisustvoPoCasu","body","cas","prisustvo","post","countPrisustvoPoCasuByCasAndPredmet","predmetId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\services\\PrisustvoPoCasu\\prisustvo-po-casu.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/app/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrisustvoPoCasuService {\n\n  constructor(private http: HttpClient) {}\n\n  proveriPrisustvoPoCasu(casId: number, prisustvoId: number): Observable<boolean> {\n    const url = environment.api+`/prisustvo-po-casu/cas/${casId}/prisustvo/${prisustvoId}`;\n    return this.http.get<boolean>(url);\n  }\n\n  createPrisustvoPoCasu(casId: number, prisustvoId: number): Observable<any> {\n    const body = {\n      cas: casId,\n      prisustvo: prisustvoId,\n    };\n    return this.http.post<any>(environment.api+`/prisustvo-po-casu`, body);\n  }\n\n  countPrisustvoPoCasuByCasAndPredmet(predmetId: number): Observable<number[]> {\n    return this.http.get<number[]>(environment.api + `/prisustvo-po-casu/predmet/${predmetId}/casovi/count`);\n  }\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,kCAAkC;;;AAK9D,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,sBAAsBA,CAACC,KAAa,EAAEC,WAAmB;IACvD,MAAMC,GAAG,GAAGP,WAAW,CAACQ,GAAG,GAAC,0BAA0BH,KAAK,cAAcC,WAAW,EAAE;IACtF,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAUF,GAAG,CAAC;EACpC;EAEAG,qBAAqBA,CAACL,KAAa,EAAEC,WAAmB;IACtD,MAAMK,IAAI,GAAG;MACXC,GAAG,EAAEP,KAAK;MACVQ,SAAS,EAAEP;KACZ;IACD,OAAO,IAAI,CAACH,IAAI,CAACW,IAAI,CAAMd,WAAW,CAACQ,GAAG,GAAC,oBAAoB,EAAEG,IAAI,CAAC;EACxE;EAEAI,mCAAmCA,CAACC,SAAiB;IACnD,OAAO,IAAI,CAACb,IAAI,CAACM,GAAG,CAAWT,WAAW,CAACQ,GAAG,GAAG,8BAA8BQ,SAAS,eAAe,CAAC;EAC1G;;SAnBWf,sBAAsB;;mBAAtBA,MAAsB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAtBnB,MAAsB;EAAAoB,OAAA,EAAtBpB,MAAsB,CAAAqB,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}