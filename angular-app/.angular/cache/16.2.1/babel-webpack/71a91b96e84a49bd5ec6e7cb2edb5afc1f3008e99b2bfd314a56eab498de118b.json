{"ast":null,"code":"var _class;\nimport { tap } from 'rxjs';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.authTokenKey = 'authToken';\n  }\n  saveToken(token) {\n    localStorage.setItem(this.authTokenKey, token);\n  }\n  logout() {\n    localStorage.removeItem(this.authTokenKey);\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  getToken() {\n    return localStorage.getItem(this.authTokenKey);\n  }\n  loginStudent(email, password) {\n    console.log('nesto');\n    return this.http.post(environment.api + '/auth/login/student', {\n      email,\n      password\n    }).pipe(tap(response => {\n      // Čuvanje JWT tokena na klijentskoj strani (primer koristi localStorage)\n      console.log('ovde', response);\n      localStorage.setItem('token', response.access_token);\n    }));\n  }\n  loginProfesor(email, password) {\n    return this.http.post('/auth/login/profesor', {\n      email,\n      password\n    }).pipe(tap(response => {\n      // Čuvanje JWT tokena na klijentskoj strani (primer koristi localStorage)\n      localStorage.setItem('token', response.access_token);\n    }));\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["tap","environment","AuthService","constructor","http","authTokenKey","saveToken","token","localStorage","setItem","logout","removeItem","isLoggedIn","getToken","getItem","loginStudent","email","password","console","log","post","api","pipe","response","access_token","loginProfesor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private authTokenKey = 'authToken';\n\n  constructor(private http: HttpClient) {}\n\n  saveToken(token: string): void {\n    localStorage.setItem(this.authTokenKey, token);\n  }\n\n\n  logout(): void {\n    localStorage.removeItem(this.authTokenKey);\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.getToken();\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(this.authTokenKey);\n  }\n\n\n  loginStudent(email: string, password: string) {\n    console.log('nesto');\n    return this.http\n      .post<{ access_token: string }>(environment.api+'/auth/login/student', { email, password })\n      .pipe(\n        tap((response) => {\n          // Čuvanje JWT tokena na klijentskoj strani (primer koristi localStorage)\n          console.log('ovde',response);\n          localStorage.setItem('token', response.access_token);\n        })\n      );\n  }\n\n  loginProfesor(email: string, password: string) {\n    return this.http\n      .post<{ access_token: string }>('/auth/login/profesor', { email, password })\n      .pipe(\n        tap((response) => {\n          // Čuvanje JWT tokena na klijentskoj strani (primer koristi localStorage)\n          localStorage.setItem('token', response.access_token);\n        })\n      );\n  }\n}\n"],"mappings":";AAEA,SAASA,GAAG,QAAQ,MAAM;AAC1B,SAASC,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAG,WAAW;EAEK;EAEvCC,SAASA,CAACC,KAAa;IACrBC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,YAAY,EAAEE,KAAK,CAAC;EAChD;EAGAG,MAAMA,CAAA;IACJF,YAAY,CAACG,UAAU,CAAC,IAAI,CAACN,YAAY,CAAC;EAC5C;EAEAO,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACC,QAAQ,EAAE;EAC1B;EAEAA,QAAQA,CAAA;IACN,OAAOL,YAAY,CAACM,OAAO,CAAC,IAAI,CAACT,YAAY,CAAC;EAChD;EAGAU,YAAYA,CAACC,KAAa,EAAEC,QAAgB;IAC1CC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,OAAO,IAAI,CAACf,IAAI,CACbgB,IAAI,CAA2BnB,WAAW,CAACoB,GAAG,GAAC,qBAAqB,EAAE;MAAEL,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAC1FK,IAAI,CACHtB,GAAG,CAAEuB,QAAQ,IAAI;MACf;MACAL,OAAO,CAACC,GAAG,CAAC,MAAM,EAACI,QAAQ,CAAC;MAC5Bf,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEc,QAAQ,CAACC,YAAY,CAAC;IACtD,CAAC,CAAC,CACH;EACL;EAEAC,aAAaA,CAACT,KAAa,EAAEC,QAAgB;IAC3C,OAAO,IAAI,CAACb,IAAI,CACbgB,IAAI,CAA2B,sBAAsB,EAAE;MAAEJ,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAC3EK,IAAI,CACHtB,GAAG,CAAEuB,QAAQ,IAAI;MACf;MACAf,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEc,QAAQ,CAACC,YAAY,CAAC;IACtD,CAAC,CAAC,CACH;EACL;;SA7CWtB,WAAW;;mBAAXA,MAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX3B,MAAW;EAAA4B,OAAA,EAAX5B,MAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}