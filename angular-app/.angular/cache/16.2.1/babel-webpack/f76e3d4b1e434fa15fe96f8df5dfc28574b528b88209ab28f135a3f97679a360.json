{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/radio\";\nimport * as i7 from \"@angular/forms\";\nexport class PocetnaStranaComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.email = '';\n    this.password = '';\n    this.userType = 'student'; // Default value\n  } // Inject HttpClient servis\n  submit() {\n    // Ovde možete da rukujete podacima koji su uneti/izabrani u formi\n    console.log('Email:', this.email);\n    console.log('Password:', this.password);\n    console.log('User Type:', this.userType);\n  }\n}\n_class = PocetnaStranaComponent;\n_class.ɵfac = function PocetnaStranaComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-pocetna-strana\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"login-container\"], [\"matInput\", \"\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"student\"], [\"value\", \"profesor\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function PocetnaStranaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-radio-group\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function PocetnaStranaComponent_Template_mat_radio_group_ngModelChange_5_listener($event) {\n        return ctx.userType = $event;\n      });\n      i0.ɵɵelementStart(6, \"mat-radio-button\", 4);\n      i0.ɵɵtext(7, \"Student\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-radio-button\", 5);\n      i0.ɵɵtext(9, \"Profesor\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function PocetnaStranaComponent_Template_button_click_10_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.userType);\n    }\n  },\n  dependencies: [i3.MatInput, i4.MatFormField, i5.MatButton, i6.MatRadioGroup, i6.MatRadioButton, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["PocetnaStranaComponent","constructor","http","authService","email","password","userType","submit","console","log","i0","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","selectors","decls","vars","consts","template","PocetnaStranaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PocetnaStranaComponent_Template_input_ngModelChange_2_listener","$event","ɵɵelementEnd","PocetnaStranaComponent_Template_input_ngModelChange_4_listener","PocetnaStranaComponent_Template_mat_radio_group_ngModelChange_5_listener","ɵɵtext","PocetnaStranaComponent_Template_button_click_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.ts","C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\components\\pocetna-strana\\pocetna-strana.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-pocetna-strana',\n  templateUrl: './pocetna-strana.component.html',\n  styleUrls: ['./pocetna-strana.component.css']\n})\nexport class PocetnaStranaComponent {\n\n\n  constructor(private http: HttpClient, private authService: AuthService) {} // Inject HttpClient servis\n\n\n  email: string = '';\n  password: string = '';\n  userType: string = 'student'; // Default value\n\n  submit() {\n    // Ovde možete da rukujete podacima koji su uneti/izabrani u formi\n    console.log('Email:', this.email);\n    console.log('Password:', this.password);\n    console.log('User Type:', this.userType);\n  }\n\n\n  // onLogin(token: string): void {\n  //   // Ovde dobijate autentifikacioni token od servera\n  //   this.authService.login(token);\n  // }\n\n  // onLogout(): void {\n  //   this.authService.logout();\n  // }\n\n  // onSubmit() {\n  //   const userData = {\n  //     email: this.email,\n  //     password: this.password,\n  //   };\n\n  //   this.http.post('/api/login', userData).subscribe(\n  //     (response: any) => {\n  //       // Ovde se možete rukovati odgovorom sa servera\n  //       // Na primer, čuvati token ili sesiju na frontendu i preusmeriti korisnika\n  //       if (response && response.token) {\n  //         // Ako je autentifikacija uspešna, sačuvajte token koristeći AuthService\n  //         this.authService.login(response.token);\n  //         // Ovde možete dodati logiku za preusmeravanje korisnika na određenu stranicu\n  //         //  if (korisnikJeProfesor) {\n  //         //   this.router.navigate(['/profesor']);\n  //         // } else {\n  //         //   this.router.navigate(['/student']);\n  //         // }\n  //       }\n  //     }\n  //   );\n  // }\n\n\n  \n}\n","<div class=\"login-container\">\n    <mat-form-field>\n        <input matInput placeholder=\"Email\" [(ngModel)]=\"email\">\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\">\n    </mat-form-field>\n    <mat-radio-group [(ngModel)]=\"userType\">\n        <mat-radio-button value=\"student\">Student</mat-radio-button>\n        <mat-radio-button value=\"profesor\">Profesor</mat-radio-button>\n    </mat-radio-group>\n    <button mat-raised-button color=\"primary\" (click)=\"submit()\">Submit</button>\n</div>"],"mappings":";;;;;;;;;AASA,OAAM,MAAOA,sBAAsB;EAGjCC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAGzD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,SAAS,CAAC,CAAC;EAL2C,CAAC,CAAC;EAO3EC,MAAMA,CAAA;IACJ;IACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACL,KAAK,CAAC;IACjCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACJ,QAAQ,CAAC;IACvCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACH,QAAQ,CAAC;EAC1C;;SAfWN,sBAAsB;;mBAAtBA,MAAsB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;QAAtBf,MAAsB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTnCZ,EAAA,CAAAc,cAAA,aAA6B;MAEed,EAAA,CAAAe,UAAA,2BAAAC,+DAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAnB,KAAA,GAAAuB,MAAA;MAAA,EAAmB;MAAvDjB,EAAA,CAAAkB,YAAA,EAAwD;MAE5DlB,EAAA,CAAAc,cAAA,qBAAgB;MAC2Cd,EAAA,CAAAe,UAAA,2BAAAI,+DAAAF,MAAA;QAAA,OAAAJ,GAAA,CAAAlB,QAAA,GAAAsB,MAAA;MAAA,EAAsB;MAA7EjB,EAAA,CAAAkB,YAAA,EAA8E;MAElFlB,EAAA,CAAAc,cAAA,yBAAwC;MAAvBd,EAAA,CAAAe,UAAA,2BAAAK,yEAAAH,MAAA;QAAA,OAAAJ,GAAA,CAAAjB,QAAA,GAAAqB,MAAA;MAAA,EAAsB;MACnCjB,EAAA,CAAAc,cAAA,0BAAkC;MAAAd,EAAA,CAAAqB,MAAA,cAAO;MAAArB,EAAA,CAAAkB,YAAA,EAAmB;MAC5DlB,EAAA,CAAAc,cAAA,0BAAmC;MAAAd,EAAA,CAAAqB,MAAA,eAAQ;MAAArB,EAAA,CAAAkB,YAAA,EAAmB;MAElElB,EAAA,CAAAc,cAAA,iBAA6D;MAAnBd,EAAA,CAAAe,UAAA,mBAAAO,yDAAA;QAAA,OAAST,GAAA,CAAAhB,MAAA,EAAQ;MAAA,EAAC;MAACG,EAAA,CAAAqB,MAAA,cAAM;MAAArB,EAAA,CAAAkB,YAAA,EAAS;;;MATpClB,EAAA,CAAAuB,SAAA,GAAmB;MAAnBvB,EAAA,CAAAwB,UAAA,YAAAX,GAAA,CAAAnB,KAAA,CAAmB;MAGAM,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAX,GAAA,CAAAlB,QAAA,CAAsB;MAEhEK,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAX,GAAA,CAAAjB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}