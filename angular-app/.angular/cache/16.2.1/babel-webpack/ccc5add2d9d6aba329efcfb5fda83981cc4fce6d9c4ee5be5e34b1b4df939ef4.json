{"ast":null,"code":"var _class;\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n  }\n  loginStudent(email, password) {\n    const body = {\n      email,\n      password\n    };\n    return this.http.post(environment.api + `/auth/login`, body);\n  }\n  loginProfesor(email, password) {\n    const body = {\n      email,\n      password\n    };\n    return this.http.post(environment.api + `/auth-profesor/login`, body);\n  }\n  fetchCurrentProfesor(currentUser) {\n    this.http.get(environment.api + `/authauth-profesor/status`).subscribe({\n      next: user => {\n        currentUser = user;\n      },\n      error: error => {\n        currentUser = null;\n        console.error('Greška pri dobijanju trenutnog korisnika:', error);\n      }\n    });\n  }\n}\n_class = AuthenticationService;\n_class.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","AuthenticationService","constructor","http","loginStudent","email","password","body","post","api","loginProfesor","fetchCurrentProfesor","currentUser","get","subscribe","next","user","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\nest+ng\\angular-app\\src\\app\\auth\\authentication.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient) {}\n\n  loginStudent(email: string, password: string) {\n    const body = { email, password };\n\n    return this.http.post(environment.api+`/auth/login`, body);\n  }\n\n  loginProfesor(email: string, password: string) {\n    const body = { email, password };\n\n    return this.http.post(environment.api+`/auth-profesor/login`, body);\n  }\n\n  fetchCurrentProfesor(currentUser:any) {\n    this.http.get(environment.api + `/authauth-profesor/status`).subscribe({\n      next:(user: any) => {\n        currentUser = user;\n      },\n      error:(error) => {\n        currentUser = null;\n        console.error('Greška pri dobijanju trenutnog korisnika:', error);\n      }}\n    );\n  }\n}\n"],"mappings":";AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,qBAAqB;EAEhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAYA,CAACC,KAAa,EAAEC,QAAgB;IAC1C,MAAMC,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAEhC,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAACR,WAAW,CAACS,GAAG,GAAC,aAAa,EAAEF,IAAI,CAAC;EAC5D;EAEAG,aAAaA,CAACL,KAAa,EAAEC,QAAgB;IAC3C,MAAMC,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAEhC,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAACR,WAAW,CAACS,GAAG,GAAC,sBAAsB,EAAEF,IAAI,CAAC;EACrE;EAEAI,oBAAoBA,CAACC,WAAe;IAClC,IAAI,CAACT,IAAI,CAACU,GAAG,CAACb,WAAW,CAACS,GAAG,GAAG,2BAA2B,CAAC,CAACK,SAAS,CAAC;MACrEC,IAAI,EAAEC,IAAS,IAAI;QACjBJ,WAAW,GAAGI,IAAI;MACpB,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAI;QACdL,WAAW,GAAG,IAAI;QAClBM,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;KAAE,CACH;EACH;;SA1BWhB,qBAAqB;;mBAArBA,MAAqB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAArBrB,MAAqB;EAAAsB,OAAA,EAArBtB,MAAqB,CAAAuB,IAAA;EAAAC,UAAA,EAFpB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}